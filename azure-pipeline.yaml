# build docker
# publish to container registry
# build helm
# publish to helm repo

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - None

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '6.x'
    displayName: 'Installing nodejs as a pre-requiste for unittest'
  - task: Docker@2
    inputs:
      containerRegistry: 'ainhabacr'
      repository: 'eadca2'
      tags: 'eadca2/bpdataservice:v1'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
    displayName: 'Build and push FE image'
  - task: HelmInstaller@1
    displayName: Helm installer
    inputs:
      helmVersionToInstall: 2.14.1
  - task: HelmDeploy@0
  # Package and deploy Helm charts v0
  # Deploy, configure, update a Kubernetes cluster in Azure Container Service by running helm commands.
  - task: HelmDeploy@0
    inputs:
      connectionType: 'Azure Resource Manager'
      kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection. Kubernetes Service Connection.
      namespace: 'default'
      # Azure Container Registry
      azureSubscriptionForACR: '7263e463-da66-4888-a897-f34f5acea14b'
      azureResourceGroupForACR: 'k8s-resource-group'
      azureContainerRegistry: 'ainhabacr'
      # Commands
      command: 'package'
      chartType: 'FilePath'
      chartPath: 'helm'
      #destination: '$(Build.ArtifactStagingDirectory)' # string. Optional. Use when command == package. Destination. Default: $(Build.ArtifactStagingDirectory).
      save: true